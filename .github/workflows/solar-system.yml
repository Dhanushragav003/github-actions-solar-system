name: Solar System Workflow
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData' 
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}} 
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}
permissions: 
  packages: write
jobs:
      
    unit-testing:
        name: unit testing
        services:
          mongo-non-prod:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 2700:27017
        env:
          MONGO_URI: 'mongodb://localhost:2700/superData' 
          MONGO_USERNAME: non-prod-user 
          MONGO_PASSWORD: non-prod-password
        strategy:
            matrix:
              Node_V: [18]
              os: [ubuntu-latest]
              exclude:
                - Node_V: 18
                  os: macos-latest

        runs-on: ${{matrix.os}}
        steps:
            - name: checkout repo
              uses: actions/checkout@v4
            - name: setup-nodejs
              uses: actions/setup-node@v4
              with:
                node-version: ${{matrix.Node_V}}
            - name: Cache NPM dependencies
              uses: actions/cache@v3 
              with: 
                path: ./node_modules 
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
    
            - name: install depen..
              run : npm install
            - name: unit-test
              run : |
                npm test
                ls
            # - name: upload
            #   if : always()
            #   uses: actions/upload-artifact@v4
              
            #   with:
            #     name: test-result ${{matrix.os}},${{matrix.Node_V}}
            #     path: ./test-results.xml

    code-coverage:
        name: code coverage
        container:
            image: node:20
        services:
          mongo-non-prod:
            image: siddharth67/mongo-db:non-prod
            options: 
              --name mongo
        env:
          MONGO_URI: 'mongodb://mongo:2700/superData' 
          MONGO_USERNAME: non-prod-user 
          MONGO_PASSWORD: non-prod-password
        runs-on: ubuntu-latest
        
        steps:
            - name: checkout
              uses: actions/checkout@v4
            # - name: setup-nodejs
            #   uses: actions/setup-node@v4
            #   with:
            #     node-version: 18
            - name: Cache NPM dependencies
              uses: actions/cache@v3 
              with: 
                path: ./node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            - name: install depen..
              run : npm install
            - name: unit-test
              continue-on-error: true
              run : |
                npm run coverage
                
            # - name: upload
            #   uses: actions/upload-artifact@v4
            #   with:
            #     name: coverage-result
            #     path: ./coverage

    docker:
      runs-on: ubuntu-latest
      needs: [unit-testing,code-coverage]
      steps:
        - name: checkout
          uses: actions/checkout@v4
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Login to ghcr
          uses: docker/login-action@v3
          with:
            registry: ghcr.io 
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Docker Build For Testing 
          uses: docker/build-push-action@v4 
          with: 
            context: .
            push: false 
            tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }} 

        - name: Docker Image Testing 
          run: |
            docker images
            docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }} 

            wget -q -O - http://127.0.0.1:3000/live | grep live
        
        - name: push into registry
          uses: docker/build-push-action@v4 
          with: 

            context: .
            push: true
            tags: |
              ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }} 
  


    

          


  
